name: Deploy All Services

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Add manual trigger

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.changes.outputs.backend }}
      frontend: ${{ steps.changes.outputs.frontend }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Check for changes
      uses: dorny/paths-filter@v2
      id: changes
      with:
        filters: |
          backend:
            - '**.py'
            - 'requirements.txt'
            - 'Dockerfile'
            - '.dockerignore'
            - 'railway.json'
            - 'start.sh'
            - 'backgroundremover-main/**'
          frontend:
            - 'index.html'
            - 'assets/**'
            - 'vercel.json'

  deploy-backend:
    needs: changes
    if: needs.changes.outputs.backend == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Railway CLI
      run: npm install -g @railway/cli
      
    - name: Deploy Backend to Railway
      run: railway deploy --service ${{ secrets.RAILWAY_SERVICE_ID }}
      env:
        RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
        
    - name: Backend Health Check
      run: |
        echo "Waiting for Railway deployment..."
        sleep 30
        curl -f https://web-production-faaf.up.railway.app/health || exit 1
        echo "✅ Backend deployed successfully!"

  deploy-frontend:
    needs: changes
    if: needs.changes.outputs.frontend == 'true' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Vercel CLI
      run: npm install -g vercel@latest
      
    - name: Deploy Frontend to Vercel
      run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
      env:
        VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
        VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        
    - name: Frontend Health Check
      run: |
        echo "Waiting for Vercel deployment..."
        sleep 15
        curl -f https://bg-remover-frontend-tau.vercel.app/ || exit 1
        echo "✅ Frontend deployed successfully!"

  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        python -m pytest test_improvements.py -v || echo "Tests completed"
        
    - name: Check Docker build
      run: |
        docker build -t test-build .
        echo "✅ Docker build test passed!"
